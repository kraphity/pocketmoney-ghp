import{u as O}from"./useAlerts.71abaa1d.js";import{am as S,E as v,an as D}from"./index.c771d730.js";const k="pocketmoney",E="accounts:v1";var x=(r=>(r.None="none",r.Weekly="weekly",r))(x||{});const L=S("accounts",()=>{const{showError:r}=O(),e=(n,t)=>{r("Das hat leider nicht funktioniert. Bitte versuche es nochmals."),console.log("operation on accounts store failed",n,t)},{getItems:A,addItem:m,deleteItem:l,updateItem:u}=D({appId:k,collectionId:E}),o=v([]);async function d(){const{items:n,error:t}=await A();t&&e("fetchAccounts",t),n&&(o.length=0,o.push(...n))}async function h(n){return await d(),s(n)}async function w({name:n,amount:t,interval:c}){const a={name:n,settings:{payment:{amount:t,interval:c}},credit:0},{item:i,error:p}=await m(a);if(p&&e("addAccount",p),i)return o.push(i),i}async function f(n,t){const c=s(n);if(!c)return;c.data={...c.data,...t};const{error:a}=await u(c.id,c.data);if(a)e("updateAccount",a);else return c}async function y(n){const{error:t}=await l(n);if(t)e("removeAccount",t);else{const c=o.findIndex(a=>a.id===n);c>-1&&o.splice(c,1)}}async function I(n){const t=s(n);if(!t)return;t.data.credit+=t.data.settings.payment.amount,t.data.toppedUpAt=new Date().toISOString();const{error:c}=await u(t.id,t.data);if(c)e("topUpAccount",c);else return t}async function g(n){await f(n,{credit:0,cashedOutAt:new Date().toISOString()})}function s(n){const t=o.find(c=>c.id===n);if(!t){e("findAccount","not found");return}return t}return{accounts:o,fetchAccounts:d,fetchAccount:h,addAccount:w,removeAccount:y,updateAccount:f,topUpAccount:I,cashOutAccount:g}});export{x as P,L as u};
